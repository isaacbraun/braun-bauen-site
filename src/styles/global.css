@import "tailwindcss";

@theme {
  --font-sans: "Space Grotesk", sans-serif;
  --font-mono: "Space Mono", monospace;

  --color-green-200: oklch(96.95% 0.0133 167.18);
  --color-green-600: oklch(61.5% 0.1631 151.61);
  --color-green-700: oklch(53.25% 0.1356 152.83);

  --shadow-smooth-20:
    0px 0.6px 0.8px rgba(0, 0, 0, 0.014), 0px 1.3px 2px rgba(0, 0, 0, 0.02),
    0px 2.5px 3.8px rgba(0, 0, 0, 0.025), 0px 4.5px 6.7px rgba(0, 0, 0, 0.03),
    0px 8.4px 12.5px rgba(0, 0, 0, 0.036), 0px 20px 30px rgba(0, 0, 0, 0.05);
  --shadow-smooth-40:
    0px 1.1px 1.1px rgba(0, 0, 0, 0.014), 0px 2.7px 2.7px rgba(0, 0, 0, 0.02),
    0px 5px 5px rgba(0, 0, 0, 0.025), 0px 8.9px 8.9px rgba(0, 0, 0, 0.03),
    0px 16.7px 16.7px rgba(0, 0, 0, 0.036), 0px 40px 40px rgba(0, 0, 0, 0.05);
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }

  a {
    @apply transition-colors duration-300 ease-in-out hover:text-green-700;
  }

  .prose {
    @apply selection:bg-green-200 max-w-4xl print:max-w-none text-gray-700 leading-7 print:text-xs print:leading-normal;

    :where(p) {
      @apply my-5 print:my-2;
    }
    :where(a) {
      @apply underline underline-offset-2 font-medium;
    }
    :where(strong) {
      @apply text-gray-800;
    }
    :where(blockquote) {
      @apply my-7 ps-4 font-semibold italic text-gray-700 border-s-4 border-s-gray-200;
    }
    :where(h1) {
      @apply text-4xl print:text-2xl mt-0 mb-10 print:mb-2 font-bold;
    }
    :where(h2) {
      @apply text-2xl print:text-base mt-12 print:mt-3 mb-3 print:mb-0.5 font-bold text-gray-500;
    }
    :where(h3) {
      @apply text-lg print:text-sm mt-6 print:mt-3 mb-0 font-semibold;
    }
    :where(h4) {
      @apply mt-3 mb-1 font-semibold;
    }
    :where(:is(img, picture, video)) {
      @apply my-6;
    }
    :where(picture > img) {
      @apply my-0;
    }
    :where(:is(ul, ol)) {
      @apply my-5 print:mt-1 print:mb-2 ps-[1.625rem] list-disc marker:text-gray-300;
    }
    :where(ol) {
      @apply list-decimal;
    }
    :where(li) {
      @apply my-2 print:m-1 ps-[0.375rem];
    }
    :where(:is(h1, h2, h3, h4) + *) {
      @apply mt-0;
    }
  }
}

@utility page-container {
  @apply my-16 md:my-32 mx-auto px-3 min-h-screen print:min-h-0 print:max-w-none print:m-0;
}

@utility tooltip {
  @apply invisible opacity-0 absolute bottom-[140%] -translate-x-10 w-20 transition-opacity duration-300 ease-in-out bg-gray-300 text-gray-900 rounded-sm text-xs shadow-lg p-1;

  &::after {
    @apply absolute left-[50%] top-full -ml-2 border-8 border-transparent border-t-gray-300 content-[''];
  }

  &.clicked {
    @apply bg-green-700 text-white;
  }

  &.clicked::after {
    @apply border-t-green-700;
  }

  .has-tooltip:hover & {
    @apply visible opacity-100 z-50;
  }
}

@utility clicked {
  &.tooltip {
    @apply bg-green-700 text-white;
  }

  &.tooltip::after {
    @apply border-t-green-700;
  }
}

@utility has-tooltip {
  @apply relative;

  &:hover .tooltip {
    @apply visible opacity-100 z-50;
  }
}

@utility button {
  @apply font-mono text-green-700 rounded-sm bg-green-200 px-4 sm:px-6 h-[41px] w-fit flex items-center hover:bg-green-700 hover:text-white transition-colors duration-300 ease-in-out hover:selection:bg-gray-700;
}

@utility button-light {
  @apply font-mono text-green-700 rounded-sm bg-transparent border border-green-700 px-4 sm:px-6 h-[41px] w-fit flex items-center hover:bg-green-700 hover:text-white transition-colors duration-300 ease-in-out;
}

@utility button-dark {
  @apply font-mono text-white rounded-sm border border-green-700 bg-green-700 px-4 sm:px-6 h-[41px] w-fit flex items-center hover:bg-transparent hover:text-green-700 transition-colors duration-300 ease-in-out;
}

@utility auto-fill-min-*{
  grid-template-columns: repeat(auto-fill, minmax(min(--value([*]), 100%), 1fr));
  grid-template-columns: repeat(auto-fill, minmax(min(--value(--text-*), 100%), 1fr));
  grid-template-columns: repeat(auto-fill, minmax(min(var(--spacing)* --value(integer), 100%), 1fr));
}

@utility auto-fill-max-*{
  grid-template-columns: repeat(auto-fill, minmax(max(--value([*]), 100%), 1fr));
  grid-template-columns: repeat(auto-fill, minmax(max(--value(--text-*), 100%), 1fr));
  grid-template-columns: repeat(auto-fill, minmax(max(var(--spacing)* --value(integer), 100%), 1fr));
}

@utility auto-fit-min-*{
  grid-template-columns: repeat(auto-fit, minmax(min(--value([*]), 100%), 1fr));
  grid-template-columns: repeat(auto-fit, minmax(min(--value(--text-*), 100%), 1fr));
  grid-template-columns: repeat(auto-fit, minmax(min(var(--spacing)* --value(integer), 100%), 1fr));
}

@utility auto-fit-max-*{
  grid-template-columns: repeat(auto-fit, minmax(max(--value([*]), 100%), 1fr));
  grid-template-columns: repeat(auto-fit, minmax(max(--value(--text-*), 100%), 1fr));
  grid-template-columns: repeat(auto-fit, minmax(max(var(--spacing)* --value(integer), 100%), 1fr));
}
